name: Update EC2 Instance Prices

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update ignoring cache'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  update-prices:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Download functions.sh
      run: |
        curl -o functions.sh https://raw.githubusercontent.com/rioastamal/easy-aws-helper/refs/heads/main/functions.sh
        chmod +x functions.sh

    - name: Generate EC2 prices for all regions
      run: |
        source ./functions.sh
        REGIONS=$(aws account list-regions | jq -r '.Regions[].RegionName')
        FORCE_UPDATE="${{ github.event.inputs.force_update }}"

        for region in $REGIONS; do
          for os in linux windows; do
            CACHE_FILE="ec2/on-demand/$os/$region/cache.txt"
            PRICES_FILE="ec2/on-demand/$os/$region/prices.txt"
            
            mkdir -p "ec2/on-demand/$os/$region"

            if [ "$FORCE_UPDATE" = "true" ] || [ ! -f "$CACHE_FILE" ] || [ $(( $(date +%s) - $(date -r "$CACHE_FILE" +%s) )) -gt 604800 ]; then
              echo "Generating EC2 prices for $os -> $region ..."
              get_ec2_instance_types --price-region-code=$region --os=$os > "$PRICES_FILE"
              echo "$(date +%s)" > "$CACHE_FILE"
            else
              echo "Using cached prices for $os -> $region (last updated $(date -r "$CACHE_FILE"))"
            fi
          done
        done

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ec2/on-demand
        git commit -m "Update EC2 prices for all regions (Linux and Windows)" || echo "No changes to commit"
        
        while true; do
          if git push; then
            echo "Push successful"
            break
          else
            echo "Push failed, pulling latest changes and retrying..."
            git pull --rebase
          fi
          sleep 5
        done
